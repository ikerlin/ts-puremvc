{"version":3,"sources":["webpack://index/webpack/universalModuleDefinition","webpack://index/webpack/bootstrap","webpack://index/../node_modules/eventemitter3/index.js","webpack://index/./com/koreez/puremvc/core/View.ts","webpack://index/./com/koreez/puremvc/core/Controller.ts","webpack://index/./com/koreez/puremvc/core/Model.ts","webpack://index/./com/koreez/puremvc/patterns/facade/Facade.ts","webpack://index/./com/koreez/puremvc/patterns/observer/Notifier.ts","webpack://index/./com/koreez/puremvc/patterns/command/SimpleCommand.ts","webpack://index/./com/koreez/puremvc/patterns/command/MacroCommand.ts","webpack://index/./com/koreez/puremvc/patterns/command/AsyncMacroCommand.ts","webpack://index/./com/koreez/puremvc/patterns/command/SyncMacroCommand.ts","webpack://index/./com/koreez/puremvc/patterns/mediator/Mediator.ts","webpack://index/./com/koreez/puremvc/patterns/proxy/Proxy.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","has","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","this","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","View","key","mediatorMap","eventEmitter","eventemitter3_default","a","instanceMap","Error","View_MULTITON_MSG","multitonKey","initializeView","getInstance","removeView","removeObserver","notificationName","observerMethod","registerObserver","notifyObservers","_i","_a","registerMediator","mediator","getMediatorName","initializeNotifier","interests","listNotificationInterests","interests_1","interest","handleNotification","onRegister","retrieveMediator","mediatorName","removeMediator","interests_2","onRemove","hasMediator","Controller","commandMap","Controller_MULTITON_MSG","initializeController","removeController","registerCommand","commandClassRef","view","executeCommand","hasCommand","removeCommand","core_View","commandInstance","execute","Model","proxyMap","Model_MULTITON_MSG","initializeModel","removeModel","registerProxy","proxy","getProxyName","retrieveProxy","proxyName","hasProxy","removeProxy","Facade","Facade_MULTITON_MSG","initializeFacade","hasCore","removeCore","core_Model","core_Controller","controller","model","sendNotification","Notifier","facade","getFacade","Notifier_MULTITON_MSG","facade_Facade","_super","SimpleCommand","SimpleCommand_extends","observer_Notifier","MacroCommand","_this","subCommands","initializeMacroCommand","MacroCommand_extends","addSubCommand","subCommand","command_SimpleCommand","AsyncMacroCommand","AsyncMacroCommand_extends","ref","shift","cmd","sent","command_MacroCommand","SyncMacroCommand","SyncMacroCommand_extends","Mediator","viewComponent","Mediator_NAME","Mediator_extends","setViewComponent","getViewComponent","Proxy","data","Proxy_NAME","setData","Proxy_extends","getData"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory();\n\telse\n\t\troot[\"index\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import EventEmitter from 'eventemitter3';\nimport Mediator from '../patterns/mediator/Mediator';\n\nexport default class View {\n  public static getInstance(key: string): View {\n    if (!key) {\n      return null;\n    }\n\n    if (!this.instanceMap[key]) {\n      this.instanceMap[key] = new View(key);\n    }\n\n    return this.instanceMap[key];\n  }\n\n  public static removeView(key: string): void {\n    delete this.instanceMap[key];\n  }\n\n  private static instanceMap: { [key: string]: View } = {};\n\n  private multitonKey: string;\n  private mediatorMap: { [key: string]: Mediator<any> } = {};\n  private eventEmitter: EventEmitter = new EventEmitter();\n\n  constructor(key: string) {\n    if (View.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n    this.multitonKey = key;\n    this.initializeView();\n  }\n\n  public removeObserver(\n    notificationName: string,\n    observerMethod: (notificationName: string, ...args: any[]) => void,\n    context: any,\n  ): void {\n    this.eventEmitter.removeListener(notificationName, observerMethod, context);\n  }\n\n  public registerObserver(\n    notificationName: string,\n    observerMethod: (notificationName: string, ...args: any[]) => void,\n    context: any,\n  ): void {\n    this.eventEmitter.on(notificationName, observerMethod, context);\n  }\n\n  public notifyObservers(notificationName: string, ...args: any[]): void {\n    this.eventEmitter.emit(notificationName, notificationName, ...args);\n  }\n\n  public registerMediator<V>(mediator: Mediator<V>): void {\n    if (this.mediatorMap[mediator.getMediatorName()]) {\n      return;\n    }\n\n    mediator.initializeNotifier(this.multitonKey);\n    // register the mediator for retrieval by name\n    this.mediatorMap[mediator.getMediatorName()] = mediator;\n\n    // get notification interests if any\n    const interests: string[] = mediator.listNotificationInterests();\n\n    // register mediator as an observer for each notification\n    if (interests.length > 0) {\n      for (const interest of interests) {\n        this.registerObserver(interest, mediator.handleNotification, mediator);\n      }\n    }\n\n    mediator.onRegister();\n  }\n\n  public retrieveMediator<V, T extends Mediator<V>>(mediatorName: string): T {\n    return this.mediatorMap[mediatorName] as T;\n  }\n\n  public removeMediator<V, T extends Mediator<V>>(mediatorName: string): T {\n    const mediator: Mediator<V> = this.mediatorMap[mediatorName];\n    if (mediator) {\n      // for every notification the mediator is interested in...\n      const interests: string[] = mediator.listNotificationInterests();\n      if (interests.length > 0) {\n        for (const interest of interests) {\n          // interest\n          this.removeObserver(interest, mediator.handleNotification, mediator);\n        }\n      }\n      // remove the mediator from the map\n      delete this.mediatorMap[mediatorName];\n\n      // alert the mediator that it has been removed\n      mediator.onRemove();\n    }\n\n    return mediator as T;\n  }\n\n  public hasMediator(mediatorName: string): boolean {\n    return this.mediatorMap[mediatorName] !== undefined;\n  }\n\n  protected initializeView(): void {}\n}\n\nconst MULTITON_MSG: string =\n  'View instance for this Multiton key already constructed!';\n","import SimpleCommand from '../patterns/command/SimpleCommand';\nimport View from './View';\n\nexport default class Controller {\n  public static removeController(key: string): void {\n    delete this.instanceMap[key];\n  }\n\n  public static getInstance(key: string): Controller {\n    if (!key) {\n      return null;\n    }\n\n    if (!this.instanceMap[key]) {\n      this.instanceMap[key] = new Controller(key);\n    }\n\n    return this.instanceMap[key];\n  }\n\n  private static instanceMap: { [key: string]: Controller } = {};\n\n  private commandMap: { [key: string]: new () => SimpleCommand } = {};\n  private multitonKey: string;\n  private view: View;\n\n  constructor(key: string) {\n    if (Controller.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n\n    this.multitonKey = key;\n    this.initializeController();\n  }\n\n  public registerCommand<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): void {\n    if (!this.commandMap[notificationName]) {\n      this.view.registerObserver(notificationName, this.executeCommand, this);\n    }\n    this.commandMap[notificationName] = commandClassRef;\n  }\n\n  public hasCommand(notificationName: string): boolean {\n    return this.commandMap[notificationName] !== undefined;\n  }\n\n  public removeCommand(notificationName: string): void {\n    if (this.hasCommand(notificationName)) {\n      this.view.removeObserver(notificationName, this.executeCommand, this);\n      delete this.commandMap[notificationName];\n    }\n  }\n\n  protected initializeController(): void {\n    this.view = View.getInstance(this.multitonKey);\n  }\n\n  protected executeCommand(notificationName: string, ...args: any[]): void {\n    const commandClassRef: new () => SimpleCommand = this.commandMap[\n      notificationName\n    ];\n    if (!commandClassRef) {\n      return;\n    }\n    const commandInstance: SimpleCommand = new commandClassRef();\n    commandInstance.initializeNotifier(this.multitonKey);\n    commandInstance.execute(notificationName, ...args);\n  }\n}\n\nconst MULTITON_MSG: string =\n  'controller key for this Multiton key already constructed';\n","import Proxy from '../patterns/proxy/Proxy';\n\nexport default class Model {\n  public static getInstance(key: string): Model {\n    if (!key) {\n      return null;\n    }\n\n    if (!this.instanceMap[key]) {\n      this.instanceMap[key] = new Model(key);\n    }\n\n    return this.instanceMap[key];\n  }\n\n  public static removeModel(key: string): void {\n    delete this.instanceMap[key];\n  }\n  private static instanceMap: { [key: string]: Model } = {};\n\n  private multitonKey: string;\n  private proxyMap: { [key: string]: Proxy } = {};\n\n  constructor(key: string) {\n    if (Model.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n    this.multitonKey = key;\n    this.initializeModel();\n  }\n\n  public registerProxy<T extends Proxy>(proxy: T): void {\n    proxy.initializeNotifier(this.multitonKey);\n    this.proxyMap[proxy.getProxyName()] = proxy;\n    proxy.onRegister();\n  }\n\n  public retrieveProxy<T extends Proxy>(proxyName: string): T {\n    return this.proxyMap[proxyName] as T;\n  }\n\n  public hasProxy(proxyName: string): boolean {\n    return this.proxyMap[proxyName] !== undefined;\n  }\n\n  public removeProxy<T extends Proxy>(proxyName: string): T {\n    if (this.proxyMap[proxyName]) {\n      const proxy: T = this.proxyMap[proxyName] as T;\n      proxy.onRemove();\n      delete this.proxyMap[proxyName];\n      return proxy;\n    }\n    return null;\n  }\n\n  protected initializeModel(): void {}\n}\n\nconst MULTITON_MSG: string =\n  'Model instance for this Multiton key already constructed!';\n","/**\n * Created by sargis on 7/4/17.\n */\n\nimport Controller from '../../core/Controller';\nimport Model from '../../core/Model';\nimport View from '../../core/View';\nimport SimpleCommand from '../command/SimpleCommand';\nimport Mediator from '../mediator/Mediator';\nimport Proxy from '../proxy/Proxy';\n\nexport default class Facade {\n  public static getInstance(key: string): Facade {\n    if (!key) {\n      return null;\n    }\n\n    if (!Facade.instanceMap[key]) {\n      Facade.instanceMap[key] = new Facade(key);\n    }\n\n    return Facade.instanceMap[key];\n  }\n\n  public static hasCore(key: string): boolean {\n    return this.instanceMap[key] !== undefined;\n  }\n\n  public static removeCore(key: string): void {\n    if (!this.instanceMap[key]) {\n      return;\n    }\n    Model.removeModel(key);\n    View.removeView(key);\n    Controller.removeController(key);\n    delete this.instanceMap[key];\n  }\n  protected static instanceMap: { [key: string]: Facade } = {};\n\n  private model: Model;\n  private view: View;\n  private controller: Controller;\n  private multitonKey: string;\n\n  constructor(key: string) {\n    if (Facade.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n    this.initializeNotifier(key);\n    this.initializeFacade();\n  }\n\n  public initializeFacade(): void {\n    this.initializeModel();\n    this.initializeController();\n    this.initializeView();\n  }\n\n  public registerCommand<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): void {\n    this.controller.registerCommand<T>(notificationName, commandClassRef);\n  }\n\n  public removeCommand(notificationName: string): void {\n    this.controller.removeCommand(notificationName);\n  }\n\n  public hasCommand(notificationName: string): boolean {\n    return this.controller.hasCommand(notificationName);\n  }\n\n  public registerProxy<T extends Proxy>(proxy: T): void {\n    this.model.registerProxy<T>(proxy);\n  }\n\n  public retrieveProxy<T extends Proxy>(proxyName: string): T {\n    return this.model.retrieveProxy(proxyName);\n  }\n\n  public removeProxy<T extends Proxy>(proxyName: string): T {\n    if (this.model) {\n      return this.model.removeProxy(proxyName);\n    }\n    return null;\n  }\n\n  public hasProxy(proxyName: string): boolean {\n    return this.model.hasProxy(proxyName);\n  }\n\n  public registerMediator<V, T extends Mediator<V>>(mediator: T): void {\n    this.view.registerMediator(mediator);\n  }\n\n  public retrieveMediator<V, T extends Mediator<V>>(mediatorName: string): T {\n    return this.view.retrieveMediator(mediatorName);\n  }\n\n  public removeMediator<V, T extends Mediator<V>>(mediatorName: string): T {\n    return this.view.removeMediator(mediatorName);\n  }\n\n  public hasMediator(mediatorName: string): boolean {\n    return this.view.hasMediator(mediatorName);\n  }\n\n  public sendNotification(notificationName: string, ...args: any[]): void {\n    this.notifyObservers(notificationName, ...args);\n  }\n\n  public notifyObservers(notificationName: string, ...args: any[]): void {\n    this.view.notifyObservers(notificationName, ...args);\n  }\n\n  public initializeNotifier(key: string): void {\n    this.multitonKey = key;\n  }\n  protected initializeController(): void {\n    if (this.controller) {\n      return;\n    }\n    this.controller = Controller.getInstance(this.multitonKey);\n  }\n\n  protected initializeModel(): void {\n    if (this.model) {\n      return;\n    }\n    this.model = Model.getInstance(this.multitonKey);\n  }\n\n  protected initializeView(): void {\n    if (this.view) {\n      return;\n    }\n    this.view = View.getInstance(this.multitonKey);\n  }\n}\n\nconst MULTITON_MSG: string =\n  'Facade instance for this Multiton key already constructed!';\n","/**\n * Created by sargis on 7/4/17.\n */\nimport Facade from '../facade/Facade';\n\nexport default class Notifier {\n  protected facade: Facade;\n  protected multitonKey: string;\n\n  public initializeNotifier(key: string): void {\n    this.multitonKey = key;\n    this.facade = this.getFacade();\n  }\n\n  protected sendNotification(notificationName: string, ...args: any[]): void {\n    if (this.facade) {\n      this.facade.sendNotification(notificationName, ...args);\n    }\n  }\n\n  private getFacade(): Facade {\n    if (this.multitonKey === null) {\n      throw new Error(MULTITON_MSG);\n    }\n\n    return Facade.getInstance(this.multitonKey);\n  }\n}\n\nconst MULTITON_MSG: string =\n  'multitonKey for this Notifier not yet initialized!';\n","import Notifier from '../observer/Notifier';\n\nexport default abstract class SimpleCommand extends Notifier {\n  public abstract execute(notificationName: string, ...args: any[]): void;\n}\n","import SimpleCommand from './SimpleCommand';\n\nexport default abstract class MacroCommand<\n  T extends SimpleCommand\n> extends SimpleCommand {\n  protected subCommands: Array<new () => T>;\n\n  constructor() {\n    super();\n    this.subCommands = [];\n    this.initializeMacroCommand();\n  }\n\n  protected initializeMacroCommand(): void {}\n\n  protected addSubCommand(subCommand: new () => T): void {\n    this.subCommands.push(subCommand);\n  }\n}\n","import MacroCommand from './MacroCommand';\nimport SimpleCommand from './SimpleCommand';\n\nexport default class AsyncMacroCommand<\n  T extends SimpleCommand\n> extends MacroCommand<T> {\n  public async execute(\n    notificationName: string,\n    ...args: any[]\n  ): Promise<void> {\n    while (this.subCommands.length > 0) {\n      const ref: new () => T = this.subCommands.shift();\n      const cmd: T = new ref();\n      cmd.initializeNotifier(this.multitonKey);\n      await cmd.execute(notificationName, ...args);\n    }\n  }\n}\n","import MacroCommand from './MacroCommand';\nimport SimpleCommand from './SimpleCommand';\n\nexport default class SyncMacroCommand<\n  T extends SimpleCommand\n> extends MacroCommand<T> {\n  public execute(notificationName: string, ...args: any[]): void {\n    while (this.subCommands.length > 0) {\n      const ref: new () => T = this.subCommands.shift();\n      const cmd: T = new ref();\n      cmd.initializeNotifier(this.multitonKey);\n      cmd.execute(notificationName, ...args);\n    }\n  }\n}\n","import Notifier from '../observer/Notifier';\n\nexport default abstract class Mediator<T> extends Notifier {\n  protected viewComponent: T;\n  private mediatorName: string;\n\n  constructor(mediatorName: string, viewComponent: T) {\n    super();\n    this.mediatorName = mediatorName || NAME;\n    this.viewComponent = viewComponent;\n  }\n\n  public getMediatorName(): string {\n    return this.mediatorName;\n  }\n\n  public setViewComponent(viewComponent: T): void {\n    this.viewComponent = viewComponent;\n  }\n\n  public getViewComponent(): T {\n    return this.viewComponent;\n  }\n\n  public abstract listNotificationInterests(): string[];\n\n  public abstract handleNotification(notificationName: string): void;\n\n  public onRegister(): void {}\n\n  public onRemove(): void {}\n}\n\nconst NAME: string = 'Mediator';\n","/**\n * Created by sargis on 7/4/17.\n */\nimport Notifier from '../observer/Notifier';\n\nexport default class Proxy extends Notifier {\n  private proxyName: string;\n  private data: string;\n  constructor(proxyName: string, data: any) {\n    super();\n    this.proxyName = proxyName || NAME;\n    if (data) {\n      this.setData(data);\n    }\n  }\n\n  public getProxyName(): string {\n    return this.proxyName;\n  }\n\n  public setData(data: any): void {\n    this.data = data;\n  }\n\n  public getData(): any {\n    return this.data;\n  }\n\n  public onRegister(): void {}\n\n  public onRemove(): void {}\n}\n\nconst NAME: string = 'Proxy';\n"],"sourceRoot":""}